<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description/>
 <version/>
 <category>drc</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name>drc_scripts</group-name>
 <menu-path>tools_menu.drc.end</menu-path>
 <interpreter>dsl</interpreter>
 <dsl-interpreter-name>drc-dsl-xml</dsl-interpreter-name>
 <text># Mineda2020_1 Rule for YSS process 
## ver0.3: 2020/2/7: Seijiro Moriyama seijiro.moriyama@anagix.com

report("Output database")

# Get raw layers
nwl = input(1, 0)
nwl_dp = input(2, 0)
diff = input(3, 0) 
pol = input(5, 0)
hpol = input(6,0)
cnt = input(7, 0)
ml1 = input(8, 0)
via1 = input(9, 0) 
ml2 = input(10, 0)
via2 = input(11, 0)
ml3 = input(12, 0)
text = input(13, 0)
frame = input(14, 0)
res = input(15, 0)
cap = input(16, 0)
dio = input(17, 0)
parea = input(18, 0)
narea = input(19, 0)
pad = input(20, 0)
dm_dcn = input(101, 0)
dm_pcn = input(102, 0)
dm_nscn = input(103, 0)
dm_pscn = input(104, 0)
dm_via1 = input(105, 0)
dm_via2 = input(106, 0)

pdiff = diff &amp; parea
# pmos = pdiff &amp; pol

puts 'Check GAP'

r_pdiff_s = pdiff.space(10.um); r_pdiff_s.output("PDIFF space &lt; 10")
r_ml1_s = ml1.space(4.um); r_ml1_s.output("ML1 space &lt; 4")
r_ml2_s = ml2.space(10.um); r_ml2_s.output("ML2 space &lt; 10")

puts 'Check Overlap'
#dm_nscn_ovlp = dm_nscn.raw.merged(2); dm_nscn_ovlp.output("nsubcont overlap")

puts 'Check Stacked Con/Via'
# cnt_ns = cnt.and(via1).not_in(via1); cnt_ns.output("cont-via1 non-stack")
#via1_ns = via1.and(via2).not_in(via2); via1_ns.output("via1-via2 non-stack")

puts 'Check Width'

ml1_w = ml1.width(10.0.um); ml1_w.output("ML1 width &lt; 10")
ml2_w = ml2.width(10.0.um); ml2_w.output("ML2 width &lt; 10")
via1_w = via1.width(8.um); via1_w.output("Via1 width &lt; 8")
cnt_w = cnt.width(8.um); cnt_w.output("cont width &lt; 8")

puts 'Check Enclose'
diff_e = diff.enclosing(cnt, 2.um); diff_e.output("cnt enclosure in diff &lt; 2.0")

puts 'Check MOS gate extension'
# geomExtension(POL, DIFF, 1, "POL gate extension &lt; 1.0") =&gt;
#pol_x = pol.not(diff)
#pol_x_w = pol_x.width(1.um); pol_x_w.output("POL gate extension &lt; 1.0")

puts 'Check stand-alone Cont/Via'

#sacnt = cnt.outside(dmcnt)
#sacnt.output("Stand alone Cont")
# SAvia1 = geomAnd(VIA1, geomNot(DM_via1)) =&gt;
</text>
</klayout-macro>
