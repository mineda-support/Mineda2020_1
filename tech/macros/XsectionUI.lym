<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>Display Xsection for Mineda2020_1</description>
 <version/>
 <category/>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name/>
 <menu-path/>
 <interpreter>ruby</interpreter>
 <dsl-interpreter-name/>
 <text># XsectionUI for Mineda2020_1 v0.3 by S. Moriyama June 16th, 2021
module MyMacro
  include RBA
  eng = DRC::DRCEngine::new
  eng.instance_eval do
     diff = input(3, 0) 
     cnt = input(7, 0)
     ml1 = input(8, 0)
     via1 = input(9, 0) 
     ml2 = input(10, 0)
     frame = input(14, 0)
     parea = input(18, 0)
     pad = input(20, 0)
    # check if the layout is after diff_cut or before diff_cut
     ml1_in_parea = ml1 &amp; parea   # .inverted.and(parea)

     ml1diff = ml1_in_parea.interacting(diff)
     ml1cnt = ml1_in_parea.interacting(cnt)
     gate = ml1diff - ml1cnt

     diff_cut = diff.and(gate.sized(-2.um))
  
     if diff_cut.area == 0 
       # $pdiff  = diff # after diff_cut
     else
       pdiff = diff - diff_cut # before diff_cut
       pdiff.output(21,0)
     end
  end
  eng._finish
  
  mw = Application.instance.main_window
  # layout_view = LayoutView::current
  #cv = layout_view.active_cellview
  #layout = cv.layout
  view_index = mw.current_view_index
  layout_view = mw.current_view

  load File.join(File.dirname(__FILE__), "../../../xsection/ruby/xsection.rb")
  include XS
  xs = XSectionScriptEnvironment.new
  xs_view_index = mw.views
  xs.run_script File.join(File.dirname(__FILE__), "../YSS-PMOS.xs")
  mw.select_view view_index
  layout = mw.current_view.active_cellview.cell.layout
  layout_view.each_layer{|l|
    ind = l.layer_index
    if ind &gt; 0 &amp;&amp; layout.get_info(ind).layer == 21
      layout.delete_layer(ind)
    end
  }
  if mw.views-1 &gt;= xs_view_index
      xs_view_index.upto(mw.views-1){|xv_index|
      xv = mw.view(xv_index).cellview(0)
      top_cell = xv.layout.top_cell
      xs = xv.layout.create_cell 'xs'
      xs.insert CellInstArray.new top_cell.cell_index, ICplxTrans.new
      lv = mw.view(view_index)
      cv_created = lv.show_layout(xs.layout, true)
      layer_props_file = File.join(File.dirname(__FILE__), "../YSS-PMOS_Xsection.lyp")
      layout_view.load_layer_props layer_props_file, cv_created, false
 
    }
  end  
end
</text>
</klayout-macro>
